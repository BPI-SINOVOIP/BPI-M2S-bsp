BANANAPI_M2S-UBOOT-CONFIG

echo "Starting boot.ini..."

setenv kernel_loadaddr "0x11000000"
setenv dtb_loadaddr "0x1000000"
setenv dtbo_loadaddr "0x5000000"
setenv initrd_loadaddr "0x13000000"
setenv env_loadaddr "0x20000000"

if test "X${lcd_exist}" = "X1"; then
	setenv panelargs "panel_exist=${lcd_exist} panel_type=${panel_type}";
fi;

setenv hdmiargs "logo=${display_layer},loaded,${fb_addr},${outputmode} vout=${outputmode},enable"
if env exist ddr_size; then
	echo "Found ddr_size: $ddr_size";
	setenv ddr "ddr_size=${ddr_size}";
else
	setenv ddr "";
fi;

setenv wol "wol_enable=${wol_enable}";
setenv rebootmode "reboot_mode=${reboot_mode}"

setenv devs "mmc usb";
setenv mmc_devplist "1"
setenv mmc_devnums "0 1"
setenv usb_devplist "1"
setenv usb_devnums "0 1 2 3"

## First, boot from mmc
## Second, boot from USB storage
for dev in ${devs}; do
	if test "X${dev}" = "Xmmc"; then
		setenv devplist ${mmc_devplist};
		setenv devnums ${mmc_devnums};
	else if test "X${dev}" = "Xusb"; then
		setenv devplist ${usb_devplist};
		setenv devnums ${usb_devnums};
	fi;fi;
	for dev_num in ${devnums}; do
		for distro_bootpart in ${devplist}; do
			echo "Scanning ${dev} ${dev_num}:${distro_bootpart}...";

			setenv load_method "fatload";
			setenv mark_prefix "";
			if test "X${dev_num}" = "X0"; then
				setenv imagetype "SD-USB";
			else
				setenv imagetype "EMMC_MBR";
			fi;

			if ${load_method} ${dev} ${dev_num}:${distro_bootpart} ${initrd_loadaddr} uInitrd; then
				if ${load_method} ${dev} ${dev_num}:${distro_bootpart} ${kernel_loadaddr} Image.gz; then
					if ${load_method} ${dev} ${dev_num}:${distro_bootpart} ${dtb_loadaddr} bananapi_m2s.dtb; then
						if ${load_method} ${dev} ${dev_num}:${distro_bootpart} ${env_loadaddr} /env.txt || ${load_method} ${dev} ${dev_num}:${distro_bootpart} ${env_loadaddr} env.txt; then
							echo "Import env.txt"; env import -t ${env_loadaddr} ${filesize};
						fi;
						if test "X${rootdev}" = "X"; then
							echo "rootdev is missing! use default: root=LABEL=BPI-ROOT!";
							setenv rootdev "LABEL=BPI-ROOT";
						fi;

						echo "Booting legacy kernel...";
						setenv condev "console=tty0 console=ttyS0,115200n8 no_console_suspend consoleblank=0 pci=pcie_bus_safe";

						# Setup dtb for different HW version
						fdt addr ${dtb_loadaddr};
						fdt resize 65536;
						setenv max_freq "max_freq_a53=${max_freq_a53} max_freq_a73=${max_freq_a73}";

						# Device Tree Overlays
						if test "X${overlays}" != "X"; then
							for overlay in ${overlays}; do
								echo Apply dtbo ${overlay}
								if ${load_method} ${dev} ${dev_num}:${distro_bootpart} ${dtbo_loadaddr} ${mark_prefix}/overlays/${overlay}.dtbo; then
									fdt apply ${dtbo_loadaddr}
								fi
							done
						fi

						if test "X${hdmi_autodetect}" != "Xyes"; then
							if test "X${hdmi}" = "X"; then
								echo "HDMI: 'hdmi' value is missing, set to default value 720p60hz!";
								setenv hdmi 720p60hz;
							fi;
							echo "HDMI: Custom mode: ${hdmi}";
							setenv hdmiargs "${hdmiargs} hdmimode=${hdmi}";
						else
							echo "HDMI: Autodetect: ${hdmimode}";
							setenv hdmiargs "${hdmiargs} hdmimode=${hdmimode}";
						fi;
						
						setenv bootargs "root=${rootdev} rootfstype=ext4 rw ${condev} ${log} ${hdmiargs} ${panelargs} fsck.repair=yes net.ifnames=0 ${ddr} ${wol} ${max_freq} jtag=disable fan=${fan_mode} coherent_pool=${dma_size} ${rebootmode} imagetype=${imagetype} pci=pcie_bus_safe ${user_kernel_args}";
						unzip ${kernel_loadaddr} ${loadaddr}
						booti ${loadaddr} ${initrd_loadaddr} ${dtb_loadaddr};
					fi;
				fi;
			fi;
		done;
	done;
done
